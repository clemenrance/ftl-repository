pipeline{

    agent any

    stages{

        stage('git checkout'){
            
            steps{
                sh 'mvn test'
            }
        }
        stage('integration test'){

            steps{
                sh 'mvn verify -DskipUnitTests'
            }
        }
        stage('MAVEN BUILD'){

            steps{
                sh 'mvn clean install'
            }
        }
        stage('STATIC TEST ANALYSIS'){

            steps{
               
               script{
                   withSonarQubeEnv(credentialsId: 'sonar-auth'){
                        sh 'mvn clean package sonar:sonar'
                   }
               }
            }
        }
        stage('Quality Gate Analysis'){     

            steps{

                script{
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-auth'
                }
            }
        }
        stage('Upload to Nexus Repo'){

            steps{

                script{
                    nexusArtifactUploader artifacts: [[artifactId: 'springboot', classifier: '', file: 'target/Uber.jar', type: 'jar']], credentialsId: 'nexus-auth', groupId: 'com.example', nexusUrl: '54.82.236.235:8081', nexusVersion: 'nexus3', protocol: 'http', repository: 'demoapplication-release', version: '1.0.0'
                }
            }
        }
        stage('Docker Image Build'){

            steps{

                script{
                    sh 'docker build -t myuber .'
                }
            }
        }
        stage('Upload to Duckerhub'){

            steps{

                script{
                    withCredentials([string(credentialsId: 'dockerhub_cred', variable: 'dockerhub_cred')]){
                        sh 'docker login -u clemenrance -p ${docker_hub_cred}'
                        sh 'docker push clemenrance/cicd-images:myuber'
                    }
                }
            }
        }
    }
}
